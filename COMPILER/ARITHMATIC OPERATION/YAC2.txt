%{
#include<stdio.h>
#include<stdlib.h>
extern FILE *yyin;
double vbltable[26] ;
void yyerror(const char *c){
	fprintf(stderr,"%s",c);
}
int yylex();
%}
%union{
	double dval;
	int vblno;
}
%token <vblno> NAME
%token <dval> NUMBER
%left '-' '+'
%left '/' '*'
%nonassoc UMINUS

%type <dval> expression
%%
statement_list: statement '\n'
	      | statement_list statement '\n'
	      ;
statement: NAME '=' expression { vbltable[$1] = $3; printf("%c = %lf\n",$1+'a',$3);} 
	 | expression { printf("= %g\n",$1); }
	 ;
expression: expression '+' expression { $$ = $1 + $3; }
	  | expression '-' expression { $$ = $1 - $3; }
	  | expression '*' expression { $$ = $1 * $3; }
	  | expression '/' expression 
		{ 
			if($3==0.0) 
				yyerror ("divide by zero");
			else
				$$ = $1 / $3;
		}
	  | '-' expression %prec UMINUS { $$ = -$2; }
	  | '(' expression ')' { $$ = $2; }
	  | NUMBER {$$ = $1;}
	  | NAME { $$ = vbltable[$1]; }
	  ;
%%
int main(){	
	FILE *file;
	file = fopen("code.c", "r") ;
	if (!file) {
		printf("couldnot open file");
		exit (1);	
	}
	else {
		yyin = file;
	}
	yyparse();
}

